{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pedro\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\portfolionew\\\\src\\\\components\\\\ClueMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { gsap } from 'gsap';\nimport './ClueMap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projetos = ['O Observador Vermelho', 'Matou - O Rato Diretor', 'A Testemunha do Fogo', 'Dupla Natureza', 'O Enigma do Olhar Circular', 'A Sereia de Prata', 'Hello, S4tur0', 'O Circo dos Olhos Dourados', 'A Guardiã Carmesim', 'A Festa do Mistério', 'O Sorriso Azul'];\nconst ClueMap = ({\n  unlocked = []\n}) => {\n  _s();\n  const pointsRef = useRef([]);\n  const linesRef = useRef([]);\n  useEffect(() => {\n    // Animação dos pontos\n    pointsRef.current.forEach((el, i) => {\n      if (el) {\n        gsap.fromTo(el, {\n          scale: 0.7,\n          opacity: 0.5\n        }, {\n          scale: 1,\n          opacity: 1,\n          duration: 0.7,\n          delay: i * 0.08,\n          ease: 'back.out(2)'\n        });\n      }\n    });\n    // Animação das linhas\n    linesRef.current.forEach((el, i) => {\n      if (el) {\n        gsap.fromTo(el, {\n          strokeDasharray: 100,\n          strokeDashoffset: 100\n        }, {\n          strokeDashoffset: 0,\n          duration: 1,\n          delay: i * 0.12,\n          ease: 'power2.out'\n        });\n      }\n    });\n  }, []);\n\n  // Layout circular\n  const R = 110;\n  const cx = 140,\n    cy = 140;\n  const angleStep = 2 * Math.PI / projetos.length;\n  const points = projetos.map((_, i) => [cx + R * Math.cos(i * angleStep - Math.PI / 2), cy + R * Math.sin(i * angleStep - Math.PI / 2)]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clue-map\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: 280,\n      height: 280,\n      children: [points.map((p, i) => /*#__PURE__*/_jsxDEV(\"line\", {\n        ref: el => linesRef.current[i] = el,\n        x1: points[i][0],\n        y1: points[i][1],\n        x2: points[(i + 1) % points.length][0],\n        y2: points[(i + 1) % points.length][1],\n        stroke: \"#bfa77a\",\n        strokeWidth: 3,\n        opacity: 0.5\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)), points.map(([x, y], i) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        ref: el => pointsRef.current[i] = el,\n        cx: x,\n        cy: y,\n        r: unlocked.includes(i) ? 13 : 9,\n        fill: unlocked.includes(i) ? '#ff2a2a' : '#bfa77a',\n        stroke: \"#fffbe6\",\n        strokeWidth: unlocked.includes(i) ? 4 : 2,\n        opacity: unlocked.includes(i) ? 1 : 0.7\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clue-map-label\",\n      children: \"Mapa de Pistas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ClueMap, \"X9GE1rtxKxSS6G4A7rhavILdiwc=\");\n_c = ClueMap;\nexport default ClueMap;\nvar _c;\n$RefreshReg$(_c, \"ClueMap\");","map":{"version":3,"names":["React","useEffect","useRef","gsap","jsxDEV","_jsxDEV","projetos","ClueMap","unlocked","_s","pointsRef","linesRef","current","forEach","el","i","fromTo","scale","opacity","duration","delay","ease","strokeDasharray","strokeDashoffset","R","cx","cy","angleStep","Math","PI","length","points","map","_","cos","sin","className","children","width","height","p","ref","x1","y1","x2","y2","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","x","y","r","includes","fill","_c","$RefreshReg$"],"sources":["C:/Users/pedro/OneDrive/Área de Trabalho/portfolionew/src/components/ClueMap.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { gsap } from 'gsap';\r\nimport './ClueMap.css';\r\n\r\nconst projetos = [\r\n  'O Observador Vermelho',\r\n  'Matou - O Rato Diretor',\r\n  'A Testemunha do Fogo',\r\n  'Dupla Natureza',\r\n  'O Enigma do Olhar Circular',\r\n  'A Sereia de Prata',\r\n  'Hello, S4tur0',\r\n  'O Circo dos Olhos Dourados',\r\n  'A Guardiã Carmesim',\r\n  'A Festa do Mistério',\r\n  'O Sorriso Azul',\r\n];\r\n\r\nconst ClueMap = ({ unlocked = [] }) => {\r\n  const pointsRef = useRef([]);\r\n  const linesRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    // Animação dos pontos\r\n    pointsRef.current.forEach((el, i) => {\r\n      if (el) {\r\n        gsap.fromTo(\r\n          el,\r\n          { scale: 0.7, opacity: 0.5 },\r\n          { scale: 1, opacity: 1, duration: 0.7, delay: i * 0.08, ease: 'back.out(2)' }\r\n        );\r\n      }\r\n    });\r\n    // Animação das linhas\r\n    linesRef.current.forEach((el, i) => {\r\n      if (el) {\r\n        gsap.fromTo(\r\n          el,\r\n          { strokeDasharray: 100, strokeDashoffset: 100 },\r\n          { strokeDashoffset: 0, duration: 1, delay: i * 0.12, ease: 'power2.out' }\r\n        );\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // Layout circular\r\n  const R = 110;\r\n  const cx = 140, cy = 140;\r\n  const angleStep = (2 * Math.PI) / projetos.length;\r\n  const points = projetos.map((_, i) => [\r\n    cx + R * Math.cos(i * angleStep - Math.PI / 2),\r\n    cy + R * Math.sin(i * angleStep - Math.PI / 2),\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"clue-map\">\r\n      <svg width={280} height={280}>\r\n        {/* Linhas conectando pontos */}\r\n        {points.map((p, i) => (\r\n          <line\r\n            key={i}\r\n            ref={el => (linesRef.current[i] = el)}\r\n            x1={points[i][0]}\r\n            y1={points[i][1]}\r\n            x2={points[(i + 1) % points.length][0]}\r\n            y2={points[(i + 1) % points.length][1]}\r\n            stroke=\"#bfa77a\"\r\n            strokeWidth={3}\r\n            opacity={0.5}\r\n          />\r\n        ))}\r\n        {/* Pontos */}\r\n        {points.map(([x, y], i) => (\r\n          <circle\r\n            key={i}\r\n            ref={el => (pointsRef.current[i] = el)}\r\n            cx={x}\r\n            cy={y}\r\n            r={unlocked.includes(i) ? 13 : 9}\r\n            fill={unlocked.includes(i) ? '#ff2a2a' : '#bfa77a'}\r\n            stroke=\"#fffbe6\"\r\n            strokeWidth={unlocked.includes(i) ? 4 : 2}\r\n            opacity={unlocked.includes(i) ? 1 : 0.7}\r\n          />\r\n        ))}\r\n      </svg>\r\n      <div className=\"clue-map-label\">Mapa de Pistas</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClueMap; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}